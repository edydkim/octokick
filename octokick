#!/usr/bin/perl -w

##########################################
#	execute a command on multi servers   #
#   http://edydkim.github.com            #
##########################################

use strict;

use Expect;
use Data::Dumper;
use Getopt::Long;
use Pod::Usage;
     
my $host = '';
my $hostFile = '';
my $cmd = '';
my $user = '';
my $pw = '';
my $debug = 0;

sub options () {
	my $help = 0;		# handled locally

	# Process options.
	if (@ARGV > 0 ) {
		Getopt::Long::Configure ("bundling_override");
	    GetOptions('h=s'	=> \$host,
		       'f=s'	=> \$hostFile,
		       'help|?'	=> \$help,
		       'c=s'	=> \$cmd,
		       'u=s' => \$user,
		       'p=s' => \$pw,
		       'debug'	=> \$debug)
	    or pod2usage(2);
	}
	if (@ARGV <= 0 || $help) {
	    # <- require "Pod/Usage.pm";
	    # <- import Pod::Usage;
	    pod2usage(1);
   	    exit 0;
	}
}

sub expect() {
	my $exp = new Expect;
	$exp->log_file("octokick.log");
	$exp->log_stdout(0);
	$exp->raw_pty(1);
	
	my $cli = "ssh $user\@$host -o StrictHostKeyChecking=no -q $cmd";
	
	$exp->spawn($cli) or die "Cannot spawn $cli: $!\n";
	
	$exp->expect(5,
	 [ qr /ssword:*/ => sub { my $exph = shift;
	                          $exph->send("$pw\n");
	                          exp_continue; }] );
	
	my $read = $exp->exp_before();
	chomp $read;
	print Dumper($read);
	
	$exp->soft_close();	
}

options;

print "$cmd";


expect;

exit 0;